{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Task } from 'src/app/models/task';\nlet DashboardComponent = class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.addTaskValue = '';\n  }\n  ngOnInit() {\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Unable to get list of tasks\");\n    });\n  }\n  addTask(etask) {\n    this.crudService.addTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,IAAI,QAAQ,qBAAqB;AAQnC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAK7BC,YAAoBC,WAAyB;IAAzB,gBAAW,GAAXA,WAAW;IAJ/B,YAAO,GAAU,IAAIH,IAAI,EAAE;IAC3B,YAAO,GAAY,EAAE;IACrB,iBAAY,GAAY,EAAE;EAEuB;EACjDI,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAIL,IAAI,EAAG;IAC1B,IAAI,CAACM,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,UAAU,EAAE;EACnB;EACAA,UAAU;IACR,IAAI,CAACJ,WAAW,CAACI,UAAU,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MAC5C,IAAI,CAACH,OAAO,GAAGG,GAAG;IACpB,CAAC,EAAEC,GAAG,IAAG;MACPC,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC;EACJ;EACAC,OAAO,CAACC,KAAY;IAClB,IAAI,CAACV,WAAW,CAACS,OAAO,CAACC,KAAK,CAAC,CAACL,SAAS,CAACC,GAAG,IAAG;MAC9C,IAAI,CAACL,QAAQ,EAAE;IACjB,CAAC,EAAEM,GAAG,IAAG;MACPC,KAAK,CAACD,GAAG,CAAC;IACZ,CAAC,CAAC;EACJ;EAEAI,QAAQ;IACN,IAAI,CAACX,WAAW,CAACW,QAAQ,CAAC,IAAI,CAACT,OAAO,CAAC,CAACG,SAAS,CAACC,GAAG,IAAG;MACtD,IAAI,CAACL,QAAQ,EAAE;IACjB,CAAC,EAAEM,GAAG,IAAE;MACNC,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CAAC;EACJ;EAEAI,UAAU,CAACF,KAAY;IACrB,IAAI,CAACV,WAAW,CAACY,UAAU,CAACF,KAAK,CAAC,CAACL,SAAS,CAACC,GAAG,IAAG;MACjD,IAAI,CAACL,QAAQ,EAAE;IACjB,CAAC,EAAEM,GAAG,IAAE;MACNC,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CAAC;EACJ;CAED;AA1CYV,kBAAkB,eAL9BF,SAAS,CAAC;EACTiB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWjB,kBAAkB,CA0C9B;SA1CYA,kBAAkB","names":["Component","Task","DashboardComponent","constructor","crudService","ngOnInit","taskObj","taskArr","getAllTask","subscribe","res","err","alert","addTask","etask","editTask","deleteTask","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Prate\\Desktop\\Challenge\\src\\app\\component\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CrudService } from 'src/app/service/CrudService';\nimport { Task } from 'src/app/models/task';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})\nexport class DashboardComponent implements OnInit {\n  taskObj : Task = new Task();\n  taskArr : Task[] = [];\n  addTaskValue : string = '';\n  \n  constructor(private crudService : CrudService) { }\n  ngOnInit(): void {\n    this.taskObj = new Task ();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Unable to get list of tasks\");\n    });\n  }\n  addTask(etask : Task) {\n    this.crudService.addTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(err);\n    });\n  }\n\n  editTask() {\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err=> {\n      alert(\"Failed to update task\");\n    });\n  }\n\n  deleteTask(etask : Task ) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err=> {\n      alert(\"Failed to delete task\");\n    }); \n  }\n\n}\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}