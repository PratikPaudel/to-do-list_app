{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(http) {\n    this.http = http;\n    this.serviceURL = \"http://localhost:3000/tasks\";\n  }\n  addTask(task) {\n    return this.http.post(this.serviceURL, task);\n  }\n  getAllTask() {\n    return this.http.get(this.serviceURL);\n  }\n  deleteTask(task) {\n    return this.http.delete(`${this.serviceURL}/${task.id}`);\n  }\n  editTask(task) {\n    return this.http.put(`${this.serviceURL}/${task.id}`, task);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAYA,OAAM,MAAOA,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACpB,IAAI,CAACC,UAAU,GAAG,6BAA6B;EACnD;EAEAC,OAAO,CAACC,IAAU;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,UAAU,EAAEE,IAAI,CAAC;EACtD;EAEAE,UAAU;IACN,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,IAAI,CAACL,UAAU,CAAC;EACjD;EAEAM,UAAU,CAACJ,IAAW;IAClB,OAAO,IAAI,CAACH,IAAI,CAACQ,MAAM,CAAO,GAAG,IAAI,CAACP,UAAU,IAAIE,IAAI,CAACM,EAAE,EAAE,CAAC;EAClE;EAEAC,QAAQ,CAACP,IAAW;IAChB,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACV,UAAU,IAAIE,IAAI,CAACM,EAAE,EAAE,EAACN,IAAI,CAAC;EACpE;;AApBSL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFR;AAAM","names":["CrudService","constructor","http","serviceURL","addTask","task","post","getAllTask","get","deleteTask","delete","id","editTask","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Prate\\Desktop\\Challenge\\src\\app\\service\\crud.service.ts"],"sourcesContent":["\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Task } from \"../models/task\";\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n    serviceURL: string ;\r\n    constructor(private http: HttpClient) {\r\n        this.serviceURL = \"http://localhost:3000/tasks\"\r\n    }\r\n\r\n    addTask(task: Task) : Observable<Task> {\r\n        return this.http.post<Task>(this.serviceURL, task);\r\n    }\r\n\r\n    getAllTask() : Observable<Task[]> {\r\n        return this.http.get<Task[]>(this.serviceURL);\r\n    }\r\n\r\n    deleteTask(task : Task) : Observable<Task> {\r\n        return this.http.delete<Task>(`${this.serviceURL}/${task.id}`);\r\n    }\r\n\r\n    editTask(task : Task) : Observable<Task> {\r\n        return this.http.put<Task>(`${this.serviceURL}/${task.id}`,task);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}